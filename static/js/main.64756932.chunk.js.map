{"version":3,"sources":["TodoForm.js","Todo.js","App.js","index.js"],"names":["TodoForm","addTodo","useState","value","setValue","handleSubmit","e","preventDefault","onSubmit","type","className","onChange","target","onClick","Todo","todo","index","completeTodo","removeTodo","changeColor","style","textDecoration","isCompleted","textDecorationColor","color","role","aria-label","text","App","todos","setTodos","newTodos","splice","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LA8BiBA,MA5BjB,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,KAGrBC,EAAe,SAAAC,GACnBA,EAAEC,iBACGJ,IACLF,EAAQE,GACRC,EAAS,MAGX,OACE,0BAAMI,SAAUH,GACd,2BACEI,KAAK,OACLC,UAAU,QACVP,MAAOA,EACPQ,SAAU,SAAAL,GAAC,OAAIF,EAASE,EAAEM,OAAOT,UAEnC,4BACEO,UAAU,aACVG,QAAS,kBAAMR,IAFjB,SCuBSS,MAzCjB,YAAuE,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAIzC,OAJoE,EAAfC,YAKjD,yBACET,UAAU,OACVU,MACE,CACAC,eAAgBN,EAAKO,YAAc,eAAiB,GACpDC,oBAAqBR,EAAKO,YAAc,MAAQ,GAChDE,MAAOT,EAAKO,YAAc,MAAQ,KAKpC,yBACEZ,UAAU,cACV,4BACEA,UAAU,YACVD,KAAK,QACLI,QAAS,kBAAMI,EAAaD,KAC5B,0BAAMS,KAAK,MAAMC,aAAW,aAA5B,WAEF,8BAECX,EAAKY,MAKN,4BAAQd,QAAS,WACfK,EAAWF,KAEX,0BAAMS,KAAK,MAAMC,aAAW,KAA5B,c,MCwBGE,MAvDf,WAAgB,IAAD,EAEgB1B,mBAAS,CACpC,CACEyB,KAAM,cACNL,aAAa,GAEf,CACEK,KAAM,cACNL,aAAa,GAEf,CACEK,KAAM,cACNL,aAAa,KAbJ,mBAEHO,EAFG,KAEIC,EAFJ,KAsBPb,EAAe,SAAAD,GACnB,IAAMe,EAAQ,YAAOF,GAErBE,EAASf,GAAOM,aAAeO,EAAMb,GAAOM,YAC5CQ,EAASC,IAGLb,EAAa,SAAAF,GACjB,IAAMe,EAAQ,YAAOF,GACrBE,EAASC,OAAOhB,EAAO,GACvBc,EAASC,IAGX,OACE,yBAAKrB,UAAU,OACb,wBAAIA,UAAU,gBAAd,aACA,wBAAIA,UAAU,QAAd,sCACA,yBAAKA,UAAU,aACZmB,EAAMI,KAAI,SAAClB,EAAMC,GAAP,OACT,kBAAC,EAAD,CACEkB,IAAKlB,EACLA,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,OAGhB,kBAAC,EAAD,CAAUjB,QAhCA,SAAA0B,GACd,IAAMI,EAAQ,sBAAOF,GAAP,CAAc,CAAEF,UAC9BG,EAASC,SCpBbI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.64756932.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction TodoForm({ addTodo }) {\n    const [value, setValue] = useState(\"\");\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      if (!value) return;\n      addTodo(value);\n      setValue(\"\");\n    };\n  \n    return (\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n        <button \n          className=\"submit-btn\"\n          onClick={() => handleSubmit}\n        >\n            Add\n        </button>\n      </form>\n    );\n  }\n\n  export default TodoForm;","import React from \"react\";\n\nfunction Todo({ todo, index, completeTodo, removeTodo, changeColor }) {\n    \n  \n  \n  return (\n      <div\n        className=\"todo\"\n        style={\n          { \n          textDecoration: todo.isCompleted ? \"line-through\" : \"\" ,\n          textDecorationColor: todo.isCompleted ? \"red\" : \"\",\n          color: todo.isCompleted ? \"red\" : \"\",\n          }\n        \n        }\n      >\n        <div\n          className=\"todo-items\">\n          <button \n            className=\"checkmark\"\n            type=\"radio\"\n            onClick={() => completeTodo(index)}>\n            <span role=\"img\" aria-label=\"checkmark\" >&#x2714;</span>\n          </button>\n          <span>\n            \n          {todo.text}\n          </span>\n          \n          \n\n          <button onClick={() => {\n            removeTodo(index)\n            }}>\n            <span role=\"img\" aria-label=\"X\">&#x274C;</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Todo;","import React, { useState } from \"react\";\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport \"./App.css\";\n\nfunction App() {\n\n     const [todos, setTodos] = useState([\n    {\n      text: \"Learn React\",\n      isCompleted: false\n    },\n    {\n      text: \"Go shopping\",\n      isCompleted: false\n    },\n    {\n      text: \"buy flowers\",\n      isCompleted: false\n    }\n  ]);\n  \n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    /* Toggles completed status */\n    newTodos[index].isCompleted = !todos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"heading-main\">Todo List</h1>\n      <h3 className=\"name\">Greg Shepherd Module 04 Assignment</h3>\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n          />\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}